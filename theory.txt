char words[100][50] // to store up to 100 words, each of length 49

1) char name[] = "Ahad";   => It is modifiable name[0] = 'M' => Mhad
Stored as 'A' 'h' 'a' 'd' '\0'
Null character tells C where to stop

2) As a pointer => char *name = "Ahad" => Can't modify it.

3) Read strings
fgets(name, sizeof(names), stdin) // automatically adds '\0' at the end. If there is enough space in the buffer, it also includes the newline character '\n. So if the user types "aba", source actually contains 'a' 'b' 'a' '\n' '\0'. If you want to remove the trailing \n => 
src[strcspn(src, "\n")] = '\0';

4) Working with strings => <string.h>

char s[] = "Ahad"

i) strlen(s) = 4 (excluding '\0') , sizeof(s) = 5 {counts '\0' too}
ii) strcopy(dest, src) => Copies src string into destination variable
iii) strcat("Hello", " World") => "Hello World"
iv) strcmp(a, b) => Compares lexicographically. returns 0 if equal
   returns a positive value if a is lexicographically greater than b, else returns a negative value.
v) strchr(s, ch) => First occurence of ch in sizeof
vi) strtok(str, delimeter) => returns a pointer to the next token or returns NULL if no tokens are left.
----------------------------------------------------------------------
token = strtok(NULL, " "); => Continue from where you left off last time. strtok modifies the string.